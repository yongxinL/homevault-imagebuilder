# =============================================================================
#
# - Copyright (C) 2016     George Li <yongxinl@outlook.com>
#
# - This is part of HomeVault imagebuilder project.
# - This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# =============================================================================

---
- name: pre-check {{ build_overlay_image }} image file
  stat:
    path: "{{ build_image_root }}/casper/{{ build_overlay_image }}"
  register: squashfs_exist

- fail:
    msg: "Whoops! {{ build_overlay_image }} file does not exist"
  when: squashfs_exist.stat.exists == False

- name: update target and setup hostname and network services
  file:
    path: "{{ build_root }}/{{ item }}"
    state: absent
  with_items:
    - /etc/hostname
    - /etc/hosts
    - /etc/resolv.conf

- name: update target and setup hostname and network services
  lineinfile:
    dest: "{{ build_root }}/{{ item.dest }}"
    line: "{{ item.line }}"
    state: present
    create: yes
  with_items:
    - { dest: '/etc/hostname', line: '{{ target_host_name }}.{{ target_host_domain }}' }
    - { dest: '/etc/hosts', line: '127.0.0.1  localhost' }
    - { dest: '/etc/hosts', line: '127.0.0.1  {{ target_host_name }}  {{ target_host_name }}.{{ target_host_domain }}' }
    - { dest: '/etc/resolv.conf', line: 'domain {{ target_host_domain }}' }
    - { dest: '/etc/resolv.conf', line: 'search {{ target_host_domain }}' }
    - { dest: '/etc/resolv.conf', line: 'nameserver 8.8.8.8' }

- name: update target and copy dpkg to exclude unwant items
  copy:
    src: "{{ playbook_dir }}/files/{{ item.name }}"
    dest: "{{ build_root }}/etc/{{ item.dest }}"
  with_items:
    - { name: "01_nodoc", dest: "dpkg/dpkg.cfg.d/01_nodoc" }
    - { name: "01_nolocales", dest: "dpkg/dpkg.cfg.d/01_nolocales" }
    - { name: "apt.conf", dest: "apt/apt.conf" }

- name: update target and set to stop bg processes when installing
  blockinfile:
    dest: "{{ build_root }}/usr/sbin/policy-rc.d"
    owner: root
    group: root
    mode: 0755
    create: yes
    block: "#!/bin/sh\n
           exit 101"

- name: update target and copy repository list
  lineinfile:
    dest: "{{ build_root }}/{{ item.dest }}"
    line: "{{ item.line }}"
    state: present
    create: yes
  with_items: "{{ ubuntu_repo_lists }}"

- name: bind mount to chroot environment
  mount:
    name: "{{ build_root }}/{{ item }}"
    src: "/{{ item }}"
    fstype: none
    opts: "bind"
    state: mounted
  with_items:
    - proc
    - dev
