#
# nginx default configuration for unknown virtual host
# designed to be included in any http {} block.
#

map $http_host $blogid {
    default       -999;

    #Ref: http://wordpress.org/extend/plugins/nginx-helper/
    #include /var/www/wordpress/wp-content/plugins/nginx-helper/map.conf ;
}

# https server at port 80. or --> https redirection
server {

    listen                  80;
    listen                  [::]:80;

    # virtual host domains
    server_name             {{ target_host_domain }} *.{{ target_host_domain }};

    # redirecting all HTTP request to HTTPS if you want to use the HTTP/2
    #return                 301 https://$host$request_uri;

    # public html root
    root                    {{ target_web_root }};

    # global restriction rules
    include                 /etc/nginx/conf.d/restrictions.ini;
    
    # Pass the PHP scripts to FastCGI server (locally with unix: param to avoid network overhead)
    location ~ \.php$ {
        # Prevent Zero-day exploit
        try_files           $uri = 404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # NOTE: you should have "cgi.fix_pathinfo = 0;" in php.ini
        include             /etc/nginx/fastcgi_params;
        fastcgi_intercept_errors    on;
        fastcgi_pass        127.0.0.1:9000;
        fastcgi_param       SCRIPT_FILENAME     $document_root$fastcgi_script_name;
        fastcgi_buffers     16 16k;
        fastcgi_buffer_size 32k;      
    }

    location / {
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files           $uri $uri/ /index.php?$args;
    }

    # wordpress multisite subdomain
    location ~ ^/files/(.*)$ {
        try_files           /wp-content/blogs.dir/$blogid/$uri /wp-includes/ms-files.php?file=$1 ;
        access_log          off;
        log_not_found       off;
        expires             max;
    }

    location ^~ /blogs.dir {
        internal;
        alias               /var/www/example.com/htdocs/wp-content/blogs.dir;
        access_log          off;
        log_not_found       off;
        expires             max;
    }

    # add some rules for static content expiry-headers here
    include                 /etc/nginx/conf.d/phpmyadmin.ini;
}