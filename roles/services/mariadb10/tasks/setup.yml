# =============================================================================
#
# - Copyright (C) 2016     George Li <yongxinl@outlook.com>
#
# - This is part of HomeVault imagebuilder project.
# - This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# =============================================================================

---
- name: check directory status in target
  stat:
    path: "/var/lib/mysql"
  register: check_path_mysqldb

- name: create {{ install_role_name }} initialize database dump
  command: "{{ item }} chdir=/var/lib"
  with_items:
    - rm -rf /var/lib/mysql/ib_logfile*
    - chown -R root:root mysql
    - tar -czf /etc/mysql/mysqldb_init.tar.gz mysql
    - chown -R mysql:mysql mysql
  
- name: temporary starting {{ install_role_name }} service
  command: "{{ item }} chdir=/var/lib"
  with_items:
    - service mysql start

- name: encrypt password hash for {{ install_role_name }} root 
  command: >
    mysql -NBe "select password('{{ target_root_password }}')"
  register: mysql_password_hash

- name: stop {{ install_role_name }} service
  command: "{{ item }} chdir=/var/lib"
  with_items:
    - service mysql stop

- name: remove {{ install_role_name }} database
  file:
    path: "/var/lib/mysql"
    state: absent

- name: Check {{ install_role_name }} service file (systemd)
  stat:
    path: "/lib/systemd/system/mariadb.service"
  register: service_file

- name: setup {{ install_role_name }} service files (systemd)
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/systemd/system/mariadb.service.d/migrated-from-my.cnf-settings.conf

- name: copy {{ install_role_name }} configure files
  template:
    src: "{{ item.name }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode|default('0644') }}"
  with_items: "{{ mariadb_configuration }}"

- name: remove {{ install_role_name }} services from booting
  command: update-rc.d -f {{ item }} remove
  with_items:
    - mysql

- name: update target and include init-functions into rc.local
  lineinfile:
    dest: "/etc/rc.local"
    line: ". /lib/lsb/init-functions"
    insertafter: "# By default this script does nothing."
    owner: root
    group: root
    mode: 0755
    state: present
    create: yes
  when: ansible_lsb.major_release|int < 15

- name: update target and start {{ install_role_name }} from rc.local
  blockinfile:
    dest: "/etc/rc.local"
    insertbefore: "exit 0"
    marker: "# {mark} MANAGED {{ install_role_name }} BLOCK"
    owner: root
    group: root
    mode: 0755
    state: present
    create: yes 
    block: |
      /etc/init.d/init-{{ install_role_name }}.sh
      log_begin_msg "Starting {{ install_role_name }} daemon"
      if [ $(ps -ef | grep -c mysql) != 1 ]; then
        service mysql restart
      else
        service mysql start
      fi
      log_end_msg 0
  when: ansible_lsb.major_release|int < 15

- name: configure {{ install_role_name }} service (systemd)
  lineinfile:
    dest: "/lib/systemd/system/mariadb.service"
    line: 'ExecStartPre=/etc/init.d/init-{{ install_role_name }}.sh'
    insertbefore: "^ExecStart.*"
    state: present
  when: service_file.stat.exists == True

- name: setup {{ install_role_name }} service files (systemd)
  lineinfile:
    dest: "/lib/systemd/system/mariadb.service"
    regexp: "{{ item.regxp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regxp: '^User.*', line: 'User=root' }
    - { regxp: '^Group.*', line: 'Group=root' }
    - { regxp: '^CapabilityBoundingSet.*', line: '#CapabilityBoundingSet=CAP_IPC_LOCK' }  # comment this line for working on RAID 1 disk
    - { regxp: '^ProtectSystem.*', line: '#ProtectSystem=full' }  # comment this line for writing stamp file to /etc
    - { regxp: '^ExecStartPre=/usr/bin/install.*', line: 'ExecStartPre=/usr/bin/install -m 755 -o root -g root -d /var/run/mysqld' }
  when: service_file.stat.exists == True
