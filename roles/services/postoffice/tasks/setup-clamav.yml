# =============================================================================
#
# - Copyright (C) 2016     George Li <yongxinl@outlook.com>
#
# - This is part of HomeVault imagebuilder project.
# - This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# =============================================================================

---
- name: update target and change {{ install_role_name }}-clamav configuration
  lineinfile:
    dest:  /etc/clamav/clamd.conf
    regexp: "{{ item.regxp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regxp: '^LocalSocketGroup.*', line: 'LocalSocketGroup root' }
    - { regxp: '^User.*', line: 'User root' }
    - { regxp: '^DatabaseDirectory.*', line: 'DatabaseDirectory {{ target_appdata_root }}/clamav' }

- name: update target and change {{ install_role_name }}-clamav configuration
  lineinfile:
    dest:  /etc/clamav/freshclam.conf
    regexp: "{{ item.regxp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regxp: '^DatabaseOwner.*', line: 'DatabaseOwner root' }
    - { regxp: '^DatabaseDirectory.*', line: 'DatabaseDirectory {{ target_appdata_root }}/clamav' }

- name: update target and relocate {{ install_role_name }}-clamav database
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /var/lib/clamav

- name: update target and enable razor and pyzor module in {{ install_role_name }}-clamav
  command:  "{{ item }}"
  become: yes
  become_user: postfix
  with_items:
    - razor-admin -create
    - razor-admin -register
    - pyzor discover

- name: update target and remove {{ install_role_name }}-clamav services from booting
  command: update-rc.d -f {{ item }} remove
  with_items:
    - clamav-daemon
    - clamav-freshclam
  when: ansible_os_family == "Debian"

- name: update target and include init-functions into rc.local
  lineinfile:
    dest: "/etc/rc.local"
    line: ". /lib/lsb/init-functions"
    insertafter: "# By default this script does nothing."
    owner: root
    group: root
    mode: 0755
    state: present
    create: yes

- name: update target and start {{ install_role_name }}-clamav from rc.local
  blockinfile:
    dest: "/etc/rc.local"
    insertbefore: "exit 0"
    marker: "# {mark} MANAGED {{ install_role_name }}-clamav BLOCK"
    owner: root
    group: root
    mode: 0755
    state: present
    create: yes 
    block: |
      #if [ ! -f "/etc/setup_clamav.done" ]; then
      #  log_begin_msg "Initializing {{ install_role_name }} environment"
      #  #MARK_clamav_DATA
      #  touch "/etc/setup_clamav.done"
      #  log_end_msg 0
      #fi

      #log_begin_msg "Starting {{ install_role_name }}-clamav daemon"
      #ln -s {{ target_appdata_root }}/clamav /var/lib/
      #if [ $(ps -ef | grep -c freshclam) != 1 ]; then
      #  service clamav-freshclam restart > /dev/null
      #else
      #  service clamav-freshclam start > /dev/null
      #fi
      #if [ $(ps -ef | grep -c clamav) != 1 ]; then
      #  service clamav-daemon restart > /dev/null
      #else
      #  service clamav-daemon start > /dev/null
      #fi
      #log_end_msg 0
  when: ansible_os_family == "Debian"

- name: update target and start {{ install_role_name }} from rc.local
  lineinfile:
    dest: "/etc/rc.local"
    line: "{{ item }}"
    insertafter: "#MARK_clamav_DATA"
    state: present
  with_items:
    - '#  [ ! -d "{{ target_appdata_root }}/clamav" ] && { mkdir -p "{{ target_appdata_root }}/clamav"; }'
    - '#  [ ! -d "{{ target_appdata_root }}" ] && { mkdir -p "{{ target_appdata_root }}"; }'
  when: target_appdata_root is defined and target_appdata_root
