# =============================================================================
#
# - Copyright (C) 2016     George Li <yongxinl@outlook.com>
#
# - This is part of HomeVault imagebuilder project.
# - This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# =============================================================================

---
- name: update target and copy {{ install_role_name }}-postfix configure files
  template:
    src: "{{ item.name }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode|default('0644') }}"
  with_items: "{{ postfix_configuration }}"

- name: update target and create {{ install_role_name }}-postfix ldap-recipients list
  blockinfile:
    dest: "/etc/postfix/ldap-recipients.cf"
    marker: "# {mark} MANAGED LDAP-recipients BLOCK"
    owner: root
    group: root
    mode: 0644
    create: yes
    block: |
      # LDAP query for recipient validation
      server_host = localhost
      server_port = 389
      version = 3
      bind = yes
      start_tls = no
      bind_dn = cn=proxyuser,ou=role,dc={{ target_host_domain.split('.')[0] }},dc={{ target_host_domain.split('.')[1] }}
      bind_pw = secret
      search_base = ou=Users,dc={{ target_host_domain.split('.')[0] }},dc={{ target_host_domain.split('.')[1] }}
      scope = sub
      query_filter = (&(objectClass=posixAccount)(mail=%s))
      result_attribute = mail

- name: update target and create {{ install_role_name }}-postfix ldap-aliases list
  blockinfile:
    dest: "/etc/postfix/ldap-aliases.cf"
    marker: "# {mark} MANAGED LDAP-aliases BLOCK"
    owner: root
    group: root
    mode: 0644
    create: yes
    block: |
      # LDAP query to get aliases and forwarding addresses
      server_host = localhost
      server_port = 389
      version = 3
      bind = yes
      start_tls = no
      bind_dn = cn=proxyuser,ou=role,dc={{ target_host_domain.split('.')[0] }},dc={{ target_host_domain.split('.')[1] }}
      bind_pw = secret
      search_base = ou=Users,dc={{ target_host_domain.split('.')[0] }},dc={{ target_host_domain.split('.')[1] }}
      scope = sub
      query_filter = (&(objectClass=posixAccount)(mail=%s))
      result_attribute = uid

- name: update target and create {{ install_role_name }}-postfix ldap-transport list
  blockinfile:
    dest: "/etc/postfix/ldap-transport.cf"
    marker: "# {mark} MANAGED LDAP-transport BLOCK"
    owner: root
    group: root
    mode: 0644
    create: yes
    block: |
      # LDAP query to get aliases and forwarding addresses
      server_host = localhost
      server_port = 389
      version = 3
      bind = yes
      start_tls = no
      bind_dn = cn=proxyuser,ou=role,dc={{ target_host_domain.split('.')[0] }},dc={{ target_host_domain.split('.')[1] }}
      bind_pw = secret
      search_base = ou=Users,dc={{ target_host_domain.split('.')[0] }},dc={{ target_host_domain.split('.')[1] }}
      scope = sub
      query_filter = (&(objectClass=posixAccount)(mail=%s))
      result_attribute = mailacceptinggeneralid

- name: update target and remove {{ install_role_name }}-postfix services from booting
  command: update-rc.d -f {{ item }} remove
  with_items:
    - postfix
  when: ansible_os_family == "Debian"

- name: update target and include init-functions into rc.local
  lineinfile:
    dest: "/etc/rc.local"
    line: ". /lib/lsb/init-functions"
    insertafter: "# By default this script does nothing."
    owner: root
    group: root
    mode: 0755
    state: present
    create: yes

- name: update target and start {{ install_role_name }}-postfix from rc.local
  blockinfile:
    dest: "/etc/rc.local"
    insertbefore: "exit 0"
    marker: "# {mark} MANAGED {{ install_role_name }}-postfix BLOCK"
    owner: root
    group: root
    mode: 0755
    state: present
    create: yes 
    block: |
      log_begin_msg "Starting {{ install_role_name }}-postfix daemon"
      if [ $(ps -ef | grep -c postfix) != 1 ]; then
        service postfix restart > /dev/null
      else
        service postfix start > /dev/null
      fi
      log_end_msg 0
  when: ansible_os_family == "Debian"